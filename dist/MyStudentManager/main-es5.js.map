{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/service/data.service.ts","webpack:///src/app/core/service/studentService.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/app/student-home/student-home.component.ts","webpack:///src/app/student-home/student-home.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","add","AppModule","declarations","providers","bootstrap","DataService","profileDetails","profileDetails$","asObservable","isVisible","next","StudentService","http","get","pipe","res","data","httpOptions","headers","post","handleError","put","error","status","console","providedIn","HeaderComponent","router","dataService","themes","name","selectedTheme","subscribe","isProfileVisible","document","body","classList","event","forEach","theme","remove","value","encapsulation","None","LoginComponent","fb","loginForm","group","email","required","password","compose","minLength","initHeader","valid","navigate","setProfileVisibility","login","NotFoundComponent","style","backgroundColor","StudentHomeComponent","studentService","messageService","datePipe","displayDelete","displayStudentModal","displayStudentImage","imgSrc","displayStudentHeader","selectedStudents","submitButtonTitle","ratings","arr","fetchTeachers","fetchData","maxDate","Date","initStudentForm","getTeachers","teachers","getStudents","tempStudent","i","length","push","fullname","concat","surname","age","ageCalculator","dateOfBirth","getTeacherByIds","teacherIDs","students","studentForm","phone","rating","address","specialization","finishReview","selectedStudent","onUpdateStudent","onAddStudent","student","imgUrl","transform","addStudent","severity","summary","detail","reset","err","patchValue","formValue","updateStudent","deleteStudent","toString","enableDeletion","convertAge","timeDiff","Math","abs","now","getTime","floor","teachersList","teachersFound","find","t","onRowSelect","onRowUnselect","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { StudentHomeComponent } from './student-home/student-home.component';\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'student-home',\n    component: StudentHomeComponent,\n  },\n  {\n    path: '',\n    redirectTo: 'student-home',\n    pathMatch: 'full',\n  },\n\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'MyStudentManager';\n  constructor() {}\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DatePipe } from '@angular/common';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TableModule } from 'primeng/table';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nlibrary.add(fas, fab);\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { PanelModule } from 'primeng/panel';\nimport { ToastModule } from 'primeng/toast';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { DialogModule } from 'primeng/dialog';\nimport { CalendarModule } from 'primeng/calendar';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { MultiSelectModule } from 'primeng/multiselect';\n\nimport { LoginComponent } from './login/login.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { StudentHomeComponent } from './student-home/student-home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { DataService } from './core/service/data.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    NotFoundComponent,\n    StudentHomeComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    ButtonModule,\n    InputTextModule,\n    InputTextareaModule,\n    DropdownModule,\n    PanelModule,\n    ToastModule,\n    DialogModule,\n    CalendarModule,\n    MessagesModule,\n    MessageModule,\n    FontAwesomeModule,\n    TableModule,\n    HttpClientModule,\n    RadioButtonModule,\n    MultiSelectModule,\n  ],\n  providers: [DataService, DatePipe],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class DataService {\n  // Observable string sources\n  private profileDetails = new Subject<boolean>();\n\n  // Observable string streams\n  profileDetails$ = this.profileDetails.asObservable();\n\n  // Service message commands\n  setProfileVisibility(isVisible: boolean) {\n    this.profileDetails.next(isVisible);\n  }\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { IStudent } from './../interfaces/index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StudentService {\n  constructor(private http: HttpClient) {}\n\n  getStudents() {\n    return this.http.get<any>('https://student-manager-db.herokuapp.com/students/').pipe(\n      map((res: any) => {\n        return res;\n      })\n    );\n  }\n\n  getTeachers() {\n    return this.http.get<any>('https://student-manager-db.herokuapp.com/teachers/').pipe(\n      map((res: any) => {\n        return res;\n      })\n    );\n  }\n\n  deleteStudent(id: number) {\n    return this.http.delete<any>('https://student-manager-db.herokuapp.com/students/' + id).pipe(\n      map((res: any) => {\n        return res;\n      })\n    );\n  }\n\n  addStudent(data: IStudent) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http\n      .post<any>('https://student-manager-db.herokuapp.com/students/', data, httpOptions)\n      .pipe(catchError(this.handleError));\n  }\n\n  updateStudent(data: IStudent) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http\n      .put<any>('https://student-manager-db.herokuapp.com/students/' + data.id, data, httpOptions)\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `,\n        error.error\n      );\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      () => new Error('Something bad happened; please try again later.')\n    );\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataService } from '../core/service/data.service';\nimport { ITheme } from '../core/interfaces/index';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class HeaderComponent {\n  isProfileVisible: boolean;\n  themes: ITheme[];\n  selectedTheme: ITheme;\n\n  constructor(public router: Router, private dataService: DataService) {\n    this.themes = [\n      { name: 'Default', id: 'default-theme' },\n      { name: 'Blue', id: 'blue-theme' },\n      { name: 'Red', id: 'red-theme' },\n      { name: 'Green', id: 'green-theme' },\n      { name: 'Dark', id: 'dark-theme' },\n    ];\n    this.selectedTheme = { name: 'Default', id: 'default-theme' };\n  }\n\n  ngOnInit() {\n    this.dataService.profileDetails$.subscribe((data) => {\n      this.isProfileVisible = data;\n    });\n    document.body.classList.add(this.selectedTheme.id);\n  }\n\n  onChangeTheme(event) {\n    this.themes.forEach((theme) => document.body.classList.remove(theme.id));\n    document.body.classList.add(event.value.id);\n  }\n}\n","<div class=\"main-header\">\n  <div class=\"main-header-logo\">\n    <i class=\"fas fa-graduation-cap\"></i>\n    <h1>Student Management</h1>\n  </div>\n  <div *ngIf=\"isProfileVisible\" class=\"main-header-user-main\">\n    <div class=\"main-header-user-main-theming\">\n      <p-dropdown\n        [options]=\"themes\"\n        [(ngModel)]=\"selectedTheme\"\n        optionLabel=\"name\"\n        (onChange)=\"onChangeTheme($event)\"\n      ></p-dropdown>\n    </div>\n    <div class=\"main-header-user-main-logout\">\n      <i class=\"fas fa-power-off\" routerLink=\"/login\"></i>\n      <p class=\"main-header-user-main-logout-text\">Logout</p>\n    </div>\n    <div class=\"main-header-user-main-search\">\n      <i class=\"fas fa-search\"></i>\n    </div>\n    <div class=\"main-header-user-main-details\">\n      <p class=\"main-header-user-main-details-name\">John Doe</p>\n      <img\n        src=\"../../assets/user2.jpg\"\n        alt=\"user\"\n        class=\"main-header-user-main-details-pic\"\n      />\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  Validators,\n  FormControl,\n  FormGroup,\n  FormBuilder,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DataService } from '../core/service/data.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private dataService: DataService\n  ) {}\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: new FormControl('', Validators.required),\n      password: new FormControl(\n        '',\n        Validators.compose([Validators.required, Validators.minLength(6)])\n      ),\n    });\n\n    this.initHeader();\n  }\n\n  ngOnDestroy() {}\n\n  login() {\n    if (this.loginForm.valid) {\n      this.router.navigate(['/student-home']);\n    }\n  }\n\n  initHeader() {\n    this.dataService.setProfileVisibility(false);\n  }\n}\n","<div class=\"header-main\">\n  <form [formGroup]=\"loginForm\" class=\"loginForm1\">\n    <h2>Login</h2>\n    <div class=\"form-group\">\n      <label for=\"float-input\">Email *</label>\n      <input\n        id=\"float-input\"\n        type=\"email\"\n        class=\"form-control\"\n        pInputText\n        aria-describedby=\"emailHelp\"\n        pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n        formControlName=\"email\"\n      />\n      <small\n        id=\"float-input\"\n        class=\"p-error\"\n        severity=\"error\"\n        *ngIf=\"\n          !loginForm.controls['email'].valid &&\n          loginForm.controls['email'].dirty\n        \"\n        >Valid Email is Required</small\n      >\n    </div>\n    <br />\n    <div class=\"form-group green-border-focus\">\n      <label for=\"float-input\">Password *</label>\n      <input\n        id=\"float-input-2\"\n        type=\"password\"\n        class=\"form-control\"\n        aria-describedby=\"emailHelp\"\n        pInputText\n        formControlName=\"password\"\n      />\n      <small\n        id=\"float-input-2\"\n        class=\"p-error\"\n        severity=\"error\"\n        *ngIf=\"\n          !loginForm.controls['password'].valid &&\n          loginForm.controls['password'].dirty\n        \"\n        >Valid Password is Required</small\n      >\n    </div>\n    <br />\n    <div>\n      <button\n        pButton\n        type=\"submit\"\n        label=\"Sign in\"\n        [disabled]=\"!loginForm.valid\"\n        (click)=\"login()\"\n        class=\"ui-button-raised ui-button-primary login-btn\"\n      ></button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss'],\n})\nexport class NotFoundComponent {\n  constructor() {}\n\n  ngOnInit() {\n    document.body.style.backgroundColor = 'white';\n  }\n}\n","<div class=\"content-block\">\n  <img src=\"../../assets/meditation.png\" class=\"image\" alt=\"woman meditating\" />\n  <div class=\"headline-wrapper\">\n    <h1 class=\"headline\">404s and heartbreaks</h1>\n    <h2 class=\"headline\">Something's wrong here.</h2>\n    <p class=\"headline-copy\">\n      This is a 404 error, which means you&#39;ve clicked on a bad link or\n      entered an invalid URL.\n    </p>\n  </div>\n</div>\n<br />\n<a routerLink=\"/\">Go Back to Home</a>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { IStudent } from '../core/interfaces/index';\nimport { IStudentView } from '../core/interfaces/index';\nimport { ITeacher } from '../core/interfaces/index';\nimport { IRating } from '../core/interfaces/index';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { StudentService } from '../core/service/studentService';\nimport { DataService } from '../core/service/data.service';\nimport { MessageService } from 'primeng/api';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-student-home',\n  templateUrl: './student-home.component.html',\n  styleUrls: ['./student-home.component.scss'],\n  providers: [MessageService],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class StudentHomeComponent implements OnInit {\n  displayAdd!: boolean;\n  displayUpdate!: boolean;\n  displayDelete: boolean = false;\n  displayStudentModal: boolean = false;\n  displayStudentImage: boolean = false;\n\n  imgSrc: string = '';\n  displayStudentHeader: string = '';\n\n  maxDate: Date;\n\n  studentForm: FormGroup;\n\n  students: IStudentView[];\n  teachers: ITeacher[];\n  ratings: IRating[];\n\n  selectedStudent: IStudentView;\n  selectedStudents: IStudentView[] = [];\n\n  submitButtonTitle: string = 'Add Student';\n\n  constructor(\n    private fb: FormBuilder,\n    private dataService: DataService,\n    private studentService: StudentService,\n    private messageService: MessageService,\n    private datePipe: DatePipe\n  ) {\n    this.ratings = [\n      { name: 'A' },\n      { name: 'B' },\n      { name: 'C' },\n      { name: 'D' },\n      { name: 'E' },\n    ];\n    let arr = document.body.classList;\n  }\n  ngOnInit() {\n    this.initHeader();\n    this.fetchTeachers();\n    this.fetchData();\n    this.maxDate = new Date();\n    this.initStudentForm();\n  }\n\n  initHeader() {\n    this.dataService.setProfileVisibility(true);\n  }\n\n  fetchTeachers() {\n    this.studentService.getTeachers().subscribe((data) => {\n      this.teachers = data;\n    });\n  }\n\n  fetchData() {\n    this.studentService.getStudents().subscribe((res) => {\n      let tempStudent: IStudentView[] = [];\n      for (let i = 0; i < res.length; i++) {\n        tempStudent.push({\n          ...res[i],\n          fullname: res[i].name.concat(' ', res[i].surname),\n          age: this.ageCalculator(res[i].dateOfBirth),\n          teachers: this.getTeacherByIds(res[i].teacherIDs),\n        });\n      }\n      this.students = tempStudent;\n    });\n  }\n\n  initStudentForm() {\n    this.studentForm = this.fb.group({\n      name: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      phone: [\n        '',\n        Validators.compose([Validators.required, Validators.minLength(10)]),\n      ],\n      teachers: ['', Validators.required],\n      rating: ['', Validators.required],\n      surname: ['', Validators.required],\n      email: ['', Validators.required],\n      address: ['', Validators.required],\n      specialization: ['', Validators.required],\n      finishReview: ['', Validators.required],\n    });\n  }\n\n  onSubmitForm() {\n    if (!!this.selectedStudent) this.onUpdateStudent();\n    else this.onAddStudent();\n  }\n\n  onAddStudent() {\n    if (this.studentForm.valid) {\n      let student: IStudent = {\n        id: this.studentForm.value.length + 1,\n        name: this.studentForm.value.name,\n        surname: this.studentForm.value.surname,\n        imgUrl: 'assets/student-4.jpg',\n        dateOfBirth: this.datePipe.transform(\n          this.studentForm.value.dateOfBirth,\n          'yyyy-MM-dd'\n        ),\n        email: this.studentForm.value.email,\n        phone: this.studentForm.value.phone,\n        address: this.studentForm.value.address,\n        teacherIDs: this.studentForm.value.teachers,\n        specialization: this.studentForm.value.specialization,\n        rating: this.studentForm.value.rating,\n        finishReview: this.studentForm.value.finishReview,\n      };\n      this.studentService.addStudent(student).subscribe(\n        (res) => {\n          this.displayStudentModal = false;\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Student Added Successfully',\n            detail: student.name.concat(' ', student.surname),\n          });\n          this.studentForm.reset();\n          this.fetchData();\n        },\n        (err) => {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Something went wrong',\n            detail: student.name.concat(' ', student.surname),\n          });\n          this.studentForm.reset();\n        }\n      );\n    }\n  }\n\n  onClickStudent(student: IStudentView) {\n    this.selectedStudent = student;\n    this.displayStudentModal = this.displayStudentImage = true;\n    this.submitButtonTitle = 'Save';\n    this.imgSrc = student.imgUrl;\n    this.displayStudentHeader = student.fullname;\n\n    this.studentForm.patchValue({\n      id: student.id,\n      name: student.name,\n      surname: student.surname,\n      imgUrl: student.imgUrl,\n      dateOfBirth: student.dateOfBirth,\n      email: student.email,\n      phone: student.phone,\n      address: student.address,\n      teachers: student.teacherIDs,\n      specialization: student.specialization,\n      rating: student.rating,\n      finishReview: student.finishReview,\n    });\n  }\n\n  onUpdateStudent() {\n    const formValue = this.studentForm.value;\n    let student: IStudent = {\n      id: this.selectedStudent.id,\n      imgUrl: this.selectedStudent.imgUrl,\n      name: formValue.name,\n      surname: formValue.surname,\n      dateOfBirth: this.datePipe.transform(formValue.dateOfBirth, 'yyyy-MM-dd'),\n      email: formValue.email,\n      phone: formValue.phone,\n      address: formValue.address,\n      teacherIDs: formValue.teachers,\n      specialization: formValue.specialization,\n      rating: formValue.rating,\n      finishReview: formValue.finishReview,\n    };\n    this.studentService.updateStudent(student).subscribe(\n      (res) => {\n        this.displayStudentModal = false;\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Student Updated Successfully',\n          detail: student.name.concat(' ', student.surname),\n        });\n        this.studentForm.reset();\n        this.selectedStudent = null;\n        this.fetchData();\n      },\n      (err) => {\n        this.displayStudentModal = false;\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Something went wrong',\n          detail: student.name.concat(' ', student.surname),\n        });\n        this.studentForm.reset();\n      }\n    );\n  }\n\n  onDeleteStudents() {\n    let res = this.selectedStudents;\n    for (let i = 0; i < res.length; i++) {\n      this.studentService.deleteStudent(res[i].id).subscribe(() => {\n        this.fetchData();\n      });\n    }\n    this.messageService.add({\n      severity: 'success',\n      detail: res.length.toString(),\n      summary: 'Student Record(s) Deleted',\n    });\n    this.selectedStudents = [];\n    this.enableDeletion();\n  }\n\n  onRowSelect(event) {\n    this.enableDeletion();\n  }\n\n  onRowUnselect(event) {\n    this.enableDeletion();\n  }\n\n  enableDeletion(): void {\n    if (this.selectedStudents.length > 0) {\n      this.displayDelete = true;\n    } else {\n      this.displayDelete = false;\n    }\n  }\n\n  cancelStudent() {\n    this.displayStudentModal = false;\n    this.studentForm.reset();\n  }\n\n  displayAddStudentModal() {\n    this.displayStudentModal = true;\n    this.displayStudentImage = false;\n    this.submitButtonTitle = 'Add Student';\n    this.displayStudentHeader = 'Add Student';\n  }\n\n  ageCalculator(dateOfBirth: string) {\n    let age = 0;\n    if (dateOfBirth) {\n      const convertAge = new Date(dateOfBirth);\n      const timeDiff = Math.abs(Date.now() - convertAge.getTime());\n      age = Math.floor(timeDiff / (1000 * 3600 * 24) / 365);\n      return age;\n    }\n    return age;\n  }\n\n  getTeacherByIds(teacherIDs: string[]): string[] {\n    let teachersList: string[] = [];\n    for (let i = 0; i < teacherIDs.length; i++) {\n      let teachersFound = this.teachers.find((t) => t.id == teacherIDs[i]);\n      teachersList.push(teachersFound.name);\n    }\n    return teachersList;\n  }\n}\n","<div class=\"header\">\n  <div class=\"header-title\">\n    <h1>Students</h1>\n  </div>\n  <div class=\"header-button\">\n    <button\n      *ngIf=\"!displayDelete\"\n      pButton\n      type=\"submit\"\n      class=\"ui-button-raised btn\"\n      (click)=\"displayAddStudentModal()\"\n    >\n      <i class=\"fal fa-plus\"></i>\n      Add Student\n    </button>\n\n    <button\n      *ngIf=\"displayDelete\"\n      pButton\n      type=\"submit\"\n      class=\"ui-button-raised btn\"\n      (click)=\"onDeleteStudents()\"\n    >\n      <i class=\"fas fa-trash\"></i>\n      Delete\n    </button>\n  </div>\n</div>\n<p-toast></p-toast>\n<div class=\"card\">\n  <p-table\n    [value]=\"students\"\n    [(selection)]=\"selectedStudents\"\n    styleClass=\"p-datatable-striped\"\n    dataKey=\"id\"\n    (onRowSelect)=\"onRowSelect($event)\"\n    (onRowUnselect)=\"onRowUnselect($event)\"\n  >\n    <ng-template pTemplate=\"header\">\n      <tr class=\"studentViewTableHeader\">\n        <th style=\"width: 3rem\">\n          <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n        </th>\n        <th>STUDENT NAME</th>\n        <th>SPECIALIZATION</th>\n        <th class=\"studentViewHeaderAddress\">ADDRESS</th>\n        <th>AGE</th>\n        <th>TEACHER</th>\n        <th>RATING</th>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-student>\n      <tr class=\"studentViewTable\">\n        <td>\n          <p-tableCheckbox [value]=\"student\"></p-tableCheckbox>\n        </td>\n        <td (click)=\"onClickStudent(student)\" class=\"studentViewName\">\n          <img [src]=\"student.imgUrl\" [alt]=\"student.imgUrl\" class=\"propic\" />\n          <h1>{{ student.name }} {{ student.surname }}</h1>\n        </td>\n        <td>{{ student.specialization }}</td>\n        <td class=\"studentViewAddress\">{{ student.address }}</td>\n        <td>{{ student.age }}</td>\n        <td>{{ student.teachers }}</td>\n        <td>{{ student.rating }}</td>\n      </tr>\n    </ng-template>\n  </p-table>\n</div>\n\n<p-dialog\n  [(visible)]=\"displayStudentModal\"\n  [modal]=\"true\"\n  [draggable]=\"false\"\n  [resizable]=\"false\"\n>\n  <p-header>\n    <div *ngIf=\"!displayStudentImage\" class=\"dialog-header\">\n      {{ displayStudentHeader }}\n    </div>\n    <div *ngIf=\"displayStudentImage\" class=\"dialog-header-pic\">\n      <img src=\"{{ imgSrc }}\" />\n      {{ displayStudentHeader }}\n    </div>\n  </p-header>\n\n  <!-- ***** NEW BOOTSRAP *********** -->\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <form [formGroup]=\"studentForm\" class=\"studentForm1\">\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-md-6\">\n              <label for=\"float-input\">Name</label>\n              <input\n                id=\"float-input\"\n                type=\"text\"\n                class=\"form-control\"\n                pInputText\n                aria-describedby=\"nameHelp\"\n                formControlName=\"name\"\n              />\n              <small\n                id=\"float-input\"\n                class=\"p-error\"\n                severity=\"error\"\n                *ngIf=\"\n                  !studentForm.controls['name'].valid &&\n                  studentForm.controls['name'].dirty\n                \"\n                >Valid Name is Required</small\n              >\n            </div>\n            <div class=\"col-xs-12 col-md-6\">\n              <label for=\"float-input\">Surname</label>\n              <input\n                id=\"float-input\"\n                type=\"text\"\n                class=\"form-control\"\n                pInputText\n                aria-describedby=\"surnameHelp\"\n                formControlName=\"surname\"\n              />\n              <small\n                id=\"float-input\"\n                class=\"p-error\"\n                severity=\"error\"\n                *ngIf=\"\n                  !studentForm.controls['surname'].valid &&\n                  studentForm.controls['surname'].dirty\n                \"\n                >Valid Surname is Required</small\n              >\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-md-6\">\n              <label for=\"dateformat\">Date of Birth</label>\n              <p-calendar\n                formControlName=\"dateOfBirth\"\n                dateFormat=\"yy-mm-dd\"\n                [showIcon]=\"true\"\n                inputId=\"dateformat\"\n                [maxDate]=\"maxDate\"\n                appendTo=\"body\"\n              ></p-calendar>\n              <small\n                id=\"dateformat\"\n                class=\"p-error\"\n                severity=\"error\"\n                *ngIf=\"\n                  !studentForm.controls['dateOfBirth'].valid &&\n                  studentForm.controls['dateOfBirth'].dirty\n                \"\n                >Valid Date of Birth is Required</small\n              >\n            </div>\n            <div class=\"col-xs-12 col-md-6\">\n              <label for=\"float-input\">Email</label>\n              <input\n                id=\"float-input\"\n                type=\"email\"\n                class=\"form-control\"\n                pInputText\n                aria-describedby=\"emailHelp\"\n                pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                formControlName=\"email\"\n              />\n              <small\n                id=\"float-input\"\n                class=\"p-error\"\n                severity=\"error\"\n                *ngIf=\"\n                  !studentForm.controls['email'].valid &&\n                  studentForm.controls['email'].dirty\n                \"\n                >Valid Email is Required</small\n              >\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-md-6\">\n              <label for=\"float-input\">Phone</label>\n              <input\n                id=\"float-input\"\n                type=\"text\"\n                class=\"form-control\"\n                pInputText\n                aria-describedby=\"phoneHelp\"\n                formControlName=\"phone\"\n              />\n              <small\n                id=\"float-input\"\n                class=\"p-error\"\n                severity=\"error\"\n                *ngIf=\"\n                  !studentForm.controls['phone'].valid &&\n                  studentForm.controls['phone'].dirty\n                \"\n                >Valid Phone is Required</small\n              >\n            </div>\n            <div class=\"col-xs-12 col-md-6\">\n              <label for=\"float-input\">Address</label>\n              <input\n                id=\"float-input\"\n                type=\"text\"\n                class=\"form-control\"\n                pInputText\n                aria-describedby=\"addressHelp\"\n                formControlName=\"address\"\n              />\n              <small\n                id=\"float-input\"\n                class=\"p-error\"\n                severity=\"error\"\n                *ngIf=\"\n                  !studentForm.controls['address'].valid &&\n                  studentForm.controls['address'].dirty\n                \"\n                >Valid Address is Required</small\n              >\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-md-6\">\n              <label for=\"teachers\">Teacher</label>\n              <p-multiSelect\n                [options]=\"teachers\"\n                formControlName=\"teachers\"\n                optionLabel=\"name\"\n                optionValue=\"id\"\n                [virtualScroll]=\"true\"\n                itemSize=\"30\"\n                appendTo=\"body\"\n              ></p-multiSelect>\n              <small\n                id=\"float-input\"\n                class=\"p-error\"\n                severity=\"error\"\n                *ngIf=\"\n                  !studentForm.controls['teachers'].valid &&\n                  studentForm.controls['teachers'].dirty\n                \"\n                >Valid Teacher is Required</small\n              >\n            </div>\n            <div class=\"col-xs-12 col-md-6\">\n              <label for=\"float-input\">Specialization</label>\n              <input\n                id=\"float-input\"\n                type=\"text\"\n                class=\"form-control\"\n                pInputText\n                aria-describedby=\"specializationHelp\"\n                formControlName=\"specialization\"\n              />\n              <small\n                id=\"float-input\"\n                class=\"p-error\"\n                severity=\"error\"\n                *ngIf=\"\n                  !studentForm.controls['specialization'].valid &&\n                  studentForm.controls['specialization'].dirty\n                \"\n                >Valid Specialization is Required</small\n              >\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-md-6\">\n              <label for=\"ratings\">Rating</label>\n              <p-dropdown\n                [options]=\"ratings\"\n                formControlName=\"rating\"\n                optionLabel=\"name\"\n                optionValue=\"name\"\n                [virtualScroll]=\"true\"\n                itemSize=\"30\"\n                inputId=\"rating\"\n                appendTo=\"body\"\n              ></p-dropdown>\n              <small\n                id=\"rating\"\n                class=\"p-error\"\n                severity=\"error\"\n                *ngIf=\"\n                  !studentForm.controls['rating'].valid &&\n                  studentForm.controls['rating'].dirty\n                \"\n                >Valid Date of Birth is Required</small\n              >\n            </div>\n            <div class=\"col-xs-12 col-md-6\">\n              <label for=\"finishReview\">Finish Review</label>\n              <div class=\"finishReview-1\">\n                <p-radioButton\n                  name=\"finishReview\"\n                  inputId=\"finishReview\"\n                  value=\"Yes\"\n                  label=\"Yes\"\n                  formControlName=\"finishReview\"\n                  class=\"finishReviewYes\"\n                ></p-radioButton>\n\n                <p-radioButton\n                  name=\"finishReview\"\n                  inputId=\"finishReview\"\n                  value=\"No\"\n                  label=\"No\"\n                  formControlName=\"finishReview\"\n                  class=\"finishReviewNo\"\n                ></p-radioButton>\n              </div>\n              <small\n                id=\"finishReview\"\n                class=\"p-error\"\n                severity=\"error\"\n                *ngIf=\"\n                  !studentForm.controls['finishReview'].valid &&\n                  studentForm.controls['finishReview'].dirty\n                \"\n                >Valid Review is Required</small\n              >\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n  <ng-template pTemplate=\"footer\">\n    <div class=\"row pl-2 pr-6 align-bottom\">\n      <div class=\"col-6\">\n        <button\n          pButton\n          type=\"button\"\n          [label]=\"submitButtonTitle\"\n          [disabled]=\"!studentForm.valid\"\n          (click)=\"onSubmitForm()\"\n          class=\"ui-button-raised w-100 btn\"\n        ></button>\n      </div>\n      <div class=\"col-6\">\n        <button\n          pButton\n          type=\"submit\"\n          label=\"Cancel\"\n          (click)=\"cancelStudent()\"\n          class=\"ui-button-raised w-100 cancel-btn\"\n        ></button>\n      </div>\n    </div>\n  </ng-template>\n</p-dialog>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}